REGION_NAME=eastus
RESOURCE_GROUP=aksworkshopalestra
SUBNET_NAME=aks-subnet
VNET_NAME=aks-vnet

az group create \
    --name $RESOURCE_GROUP \
    --location $REGION_NAME

    az network vnet create \
    --resource-group $RESOURCE_GROUP \
    --location $REGION_NAME \
    --name $VNET_NAME \
    --address-prefixes 10.0.0.0/8 \
    --subnet-name $SUBNET_NAME \
    --subnet-prefixes 10.240.0.0/16
    

    SUBNET_ID=$(az network vnet subnet show \
    --resource-group $RESOURCE_GROUP \
    --vnet-name $VNET_NAME \
    --name $SUBNET_NAME \
    --query id -o tsv)

    SUBNET_ID=/subscriptions/38799598-962d-47e5-beb0-e391ff1577a1/resourceGroups/aksworkshopalestra/providers/Microsoft.Network/virtualNetworks/aks-vnet/subnets/aks-subnet

    VERSION=1.18.8

    AKS_CLUSTER_NAME=aksworkshop-11362


    az aks create \
--resource-group $RESOURCE_GROUP \
--name $AKS_CLUSTER_NAME \
--vm-set-type VirtualMachineScaleSets \
--node-count 2 \
--load-balancer-sku standard \
--location $REGION_NAME \
--kubernetes-version $VERSION \
--network-plugin azure \
--vnet-subnet-id $SUBNET_ID \
--service-cidr 10.2.0.0/24 \
--dns-service-ip 10.2.0.10 \
--docker-bridge-address 172.17.0.1/16 \
--generate-ssh-keys

az aks get-credentials \
    --resource-group $RESOURCE_GROUP \
    --name $AKS_CLUSTER_NAME

    ACR_NAME=acr$RANDOM

    ACR_NAME=acr29991

    az acr create \
    --resource-group $RESOURCE_GROUP \
    --location $REGION_NAME \
    --name $ACR_NAME \
    --sku Basic

    az acr build \
    --resource-group $RESOURCE_GROUP \
    --registry $ACR_NAME \
    --image ratings-api:v1 .

    az aks get-credentials \
    --resource-group $RESOURCE_GROUP \
    --name $AKS_CLUSTER_NAME



 ------------------------------ More Notes ------------------------------

 REGION_NAME=eastus2
RESOURCE_GROUP=PoC_Zone

az group create \
    --name $RESOURCE_GROUP \
    --location $REGION_NAME


SUBNET_NAME=aks-subnet
VNET_NAME=aks-vnet


az network vnet create \
    --resource-group $RESOURCE_GROUP \
    --location $REGION_NAME \
    --name $VNET_NAME \
    --address-prefixes 10.0.0.0/8 \
    --subnet-name $SUBNET_NAME \
    --subnet-prefixes 10.240.0.0/16


    SUBNET_ID=$(az network vnet subnet show \
    --resource-group $RESOURCE_GROUP \
    --vnet-name $VNET_NAME \
    --name $SUBNET_NAME \
    --query id -o tsv)


    VERSION=$(az aks get-versions \
    --location $REGION_NAME \
    --query 'orchestrators[?!isPreview] | [-1].orchestratorVersion' \
    --output tsv)


    AKS_CLUSTER_NAME=aks-$RANDOM
     AKS_CLUSTER_NAME=aksworkshop-oar

     AKS_CLUSTER_NAME=aksworkshop-28772



az aks create \
--resource-group $RESOURCE_GROUP \
--name $AKS_CLUSTER_NAME \
--vm-set-type VirtualMachineScaleSets \
--node-count 2 \
--load-balancer-sku standard \
--location $REGION_NAME \
--kubernetes-version $VERSION \
--network-plugin azure \
--vnet-subnet-id $SUBNET_ID \
--service-cidr 10.2.0.0/24 \
--dns-service-ip 10.2.0.10 \
--docker-bridge-address 172.17.0.1/16 \
--generate-ssh-keys \
--zones 1 2 3 \
--enable-addons monitoring \
--attach-acr acr692

az aks create \
--resource-group $RESOURCE_GROUP \
--name $AKS_CLUSTER_NAME \
--vm-set-type VirtualMachineScaleSets \
--node-count 2 \
--load-balancer-sku standard \
--location $REGION_NAME \
--kubernetes-version $VERSION \
--network-plugin azure \
--generate-ssh-keys \
--aks-custom-headers EnableAzureDiskFileCSIDriver=true \
--zones 1 2 3 


az aks create -n myCluster -g myResourceGroup --network-plugin azure --enable-managed-identity -a ingress-appgw --appgw-name myApplicationGateway --appgw-subnet-cidr "10.2.0.0/16" --generate-ssh-keys


az aks get-credentials \
    --resource-group $RESOURCE_GROUP \
    --name $AKS_CLUSTER_NAME

    az aks get-credentials --resource-group aksworkshop-gbm-dev --name aksworkshop-oar

kubectl describe nodes | grep -e "Name:" -e "topology.kubernetes.io/zone"

chmod +x 

Create a container registry

ACR_NAME=acr$RANDOM
ACR_NAME=acr692
ACR_NAME=acroar

az acr create \
    --resource-group $RESOURCE_GROUP \
    --location $REGION_NAME \
    --name $ACR_NAME \
    --sku Basic

    git clone https://github.com/oaviles/hello_cloud-native.git


    az acr build \
    --resource-group $RESOURCE_GROUP \
    --registry $ACR_NAME \
    --image api:v1 .

      az acr build \
    --resource-group $RESOURCE_GROUP \
    --registry $ACR_NAME \
    --image api .

    az aks update \
    --name $AKS_CLUSTER_NAME \
    --resource-group $RESOURCE_GROUP \
    --attach-acr $ACR_NAME


    helm install ratings bitnami/mongodb \
    --namespace ratingsapp \
    --set auth.username=user1,auth.password=pwd1,auth.database=ratingsdb


    helm install nginx-ingress ingress-nginx/ingress-nginx \
    --namespace ingress \
    --set controller.replicaCount=2 \
    --set controller.nodeSelector."beta\.kubernetes\.io/os"=linux \
    --set defaultBackend.nodeSelector."beta\.kubernetes\.io/os"=linux